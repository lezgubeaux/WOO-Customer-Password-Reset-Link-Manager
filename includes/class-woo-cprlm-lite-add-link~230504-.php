<?php

/**
 * Create, store and send to CRM - a Password Reset Link
 *
 * @link       https://framework.tech
 * @since      1.0.0
 *
 * @package    Woo_CPRLM_Lite
 * @subpackage Woo_CPRLM_Lite/includes
 */

/**
 * Create, store and send to CRM - a Password Reset Link
 *
 * Catching native WP events related to user password - and generating and storing the PRL
 *
 * @package    Woo_CPRLM_Lite
 * @subpackage Woo_CPRLM_Lite/includes
 * @author     Vladimir Eric <vladimir@framework.tech>
 */

class Woo_CPRLM_Lite_add_link
{
    /**
     * Checks all Customers for permanent_password_link
     *
     * @since    0.1.0
     */

    public $id;
    public $resp;

    public function __construct()
    {
    }

    /**
     * get or set the current user PRL, store it as Profiel field and push it to CRM
     */
    public function prl_of_current_user($id)
    {
        // make id class-global
        $this->id = $id;

        // get his activation_key
        $keys = $this->get_keys($id);
        $act_key = $keys[0];
        $reset_key = $keys[1];

        if (is_array($reset_key)) {
            // in case of any error, returned $reset_key is not string (as should be)
            return $reset_key[1];
        }

        // generate the link
        $reset_link = $this->gen_link($reset_key);
        $email = $reset_link[1];

        // store the generated PRL
        update_user_meta($id, 'permanent_reset_link', $reset_link[0]);

        // push to CRM




        $args = array(
            'timeout'       => 45,
            'body'          => array(
                'email'         => $email,
                'reset_link'    => $reset_link[0],
            ),
        );

        // send request to a webhook created within Zoho CRM
        $url = 'https://hook.eu1.make.com/bw1rb8yf7a3qv3zn4xtjp2y3b8vb6qje';

        $res = wp_remote_post($url, $args);
        $result = $res['body'] . ' ' . $res['response']['code'];

        // log
        ve_debug_log("The user's PRL was pushed to CRM: " . $args['body']['email'] . " " . $reset_link[0] . " " . $result);




        // return success code (error | saved_to_db ONLY | $id=saved&pushed_to_crm)
        return $reset_link[0];
    }

    /**
     * generate a new PRL
     */
    private function new_link($user)
    {
        // activation key was empty, so simulate 'lost password' request
        $reset_key = get_password_reset_key($user);

        if (is_wp_error($reset_key)) {
            return array(0, "problem with _activation_key of id: " . $this->id .  ", " . $reset_key->get_error_message());
        }

        return $reset_key;
    }

    /**
     * get activation and reset keys to create PRL (works whether user alrady tried reset or not)
     */
    private function get_keys()
    {
        $user = get_user_by('ID', $this->id);
        $act_key = $user->user_activation_key;

        // if user_activation_key is empty, create it
        if ($act_key == '' || !isset($act_key) || empty($act_key) || 1 === 1) {
            $reset_key = $this->new_link($user);

            // get the new activation key (generated by ->new_link{get_password_reset()})
            $act_key = $user->user_activation_key;
        } else {
            // process the key (the way check_password_reset does)
            if (false !== strpos($act_key, ':')) {
                list($pass_request_time, $reset_key) = explode(':', $user->user_activation_key, 2);
                $expiration_time = $pass_request_time + CPRLM_LITE_EXP_TIME[CPRLM_LITE_EXP_TIME_DEF];
            } else {
                // badly defined user_activation_key
                ve_debug_log("Warning: user_activation_key is not of a proper format! \r\n
                User with the ID: " . $this->id . " was not updated with the PRL!");
            }
        }

        // check reset key in order to:
        // 1. catch errors
        // 2. trigger reset password period setup
        check_password_reset_key($reset_key, $user->user_login);

        $keys = array($act_key, $reset_key);
        return $keys;
    }

    /** 
     * create a link (keys available)
     */
    public function gen_link($reset_key)
    {
        $user = get_user_by('ID', $this->id);
        $username = $user->get('user_login');
        $user_locale = get_user_locale($user);
        $email = $user->user_email;

        $reset_link = home_url() . '/my-account/lost-password/?show-reset-form=true&key=' . $reset_key . '&login=' . $username . '&wp_lang=' . $user_locale;

        return array($reset_link, $email);
    }
}
